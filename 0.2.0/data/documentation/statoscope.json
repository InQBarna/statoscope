{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/statoscope"]}],"abstract":[{"text":"A lightweight library for managing state in iOS applications, designed with simplicity, testability, and scalability in mind.","type":"text"}],"kind":"symbol","hierarchy":{"paths":[[]]},"topicSections":[{"identifiers":["doc:\/\/Statoscope\/documentation\/Statoscope\/Overview-article","doc:\/\/Statoscope\/tutorials\/StatoscopeTutorial"],"title":"Tutorials"},{"title":"Protocols","identifiers":["doc:\/\/Statoscope\/documentation\/Statoscope\/DummyScopeImplementation","doc:\/\/Statoscope\/documentation\/Statoscope\/Effect","doc:\/\/Statoscope\/documentation\/Statoscope\/EffectError","doc:\/\/Statoscope\/documentation\/Statoscope\/Effectfull","doc:\/\/Statoscope\/documentation\/Statoscope\/EffectfullImplementation","doc:\/\/Statoscope\/documentation\/Statoscope\/HierarchialScopeMiddleWare","doc:\/\/Statoscope\/documentation\/Statoscope\/Injectable","doc:\/\/Statoscope\/documentation\/Statoscope\/InjectionTreeNode","doc:\/\/Statoscope\/documentation\/Statoscope\/InjectionTreeNodeProtocol","doc:\/\/Statoscope\/documentation\/Statoscope\/IsSubscopeToMirror","doc:\/\/Statoscope\/documentation\/Statoscope\/Scope","doc:\/\/Statoscope\/documentation\/Statoscope\/ScopeImplementation","doc:\/\/Statoscope\/documentation\/Statoscope\/Statostore","doc:\/\/Statoscope\/documentation\/Statoscope\/StoreProtocol","doc:\/\/Statoscope\/documentation\/Statoscope\/StoreViewProtocol"]},{"title":"Structures","identifiers":["doc:\/\/Statoscope\/documentation\/Statoscope\/AnyEffect","doc:\/\/Statoscope\/documentation\/Statoscope\/AnyScopeImplementation","doc:\/\/Statoscope\/documentation\/Statoscope\/EffectsState","doc:\/\/Statoscope\/documentation\/Statoscope\/Inject","doc:\/\/Statoscope\/documentation\/Statoscope\/Injected","doc:\/\/Statoscope\/documentation\/Statoscope\/InjectedForEffect","doc:\/\/Statoscope\/documentation\/Statoscope\/InjectedParam","doc:\/\/Statoscope\/documentation\/Statoscope\/InjectedWithDefault","doc:\/\/Statoscope\/documentation\/Statoscope\/InvalidPristineResult","doc:\/\/Statoscope\/documentation\/Statoscope\/InvalidStateError","doc:\/\/Statoscope\/documentation\/Statoscope\/NoInjectedValueFound","doc:\/\/Statoscope\/documentation\/Statoscope\/StatoscopeLogger","doc:\/\/Statoscope\/documentation\/Statoscope\/Subscope","doc:\/\/Statoscope\/documentation\/Statoscope\/Superscope","doc:\/\/Statoscope\/documentation\/Statoscope\/WhenFromSubscope"]},{"title":"Variables","identifiers":["doc:\/\/Statoscope\/documentation\/Statoscope\/scopeEffectsDisabledInUnitTests"]},{"title":"Functions","identifiers":["doc:\/\/Statoscope\/documentation\/Statoscope\/bind(viewShows:_:)","doc:\/\/Statoscope\/documentation\/Statoscope\/bind(viewShows:_:_:)"]},{"identifiers":["doc:\/\/Statoscope\/documentation\/Statoscope\/__(_:_:)"],"title":"Operators"},{"identifiers":["doc:\/\/Statoscope\/documentation\/Statoscope\/CaseAssociatedGet()","doc:\/\/Statoscope\/documentation\/Statoscope\/Copy()","doc:\/\/Statoscope\/documentation\/Statoscope\/EffectStruct(equatable:)"],"title":"Macros"},{"identifiers":["doc:\/\/Statoscope\/documentation\/Statoscope\/LogLevel","doc:\/\/Statoscope\/documentation\/Statoscope\/StatoscopeErrors"],"title":"Enumerations"},{"identifiers":["doc:\/\/Statoscope\/documentation\/Statoscope\/Swift"],"title":"Extended Modules"}],"identifier":{"url":"doc:\/\/Statoscope\/documentation\/Statoscope","interfaceLanguage":"swift"},"sections":[],"metadata":{"symbolKind":"module","roleHeading":"Framework","modules":[{"name":"Statoscope"}],"title":"Statoscope","externalID":"Statoscope","role":"collection"},"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"content":[{"type":"heading","level":2,"text":"Overview","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Statoscope helps developers focus on the overall design of application state, offering helpers for testing, dependency injection, and composing state scopes."}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"State Management"}],"type":"strong"}]},{"inlineContent":[{"type":"text","text":"State and state mutation using synchronous events are managed by the "},{"type":"codeVoice","code":"Store"},{"text":", which has a single entry point for handling ","type":"text"},{"type":"codeVoice","code":"When"},{"type":"text","text":" events."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Effects"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Asynchronous effects are managed through the "},{"code":"EffectsHandler","type":"codeVoice"},{"text":", which supports checking the status of effects and allows for their cancellation.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Scopes"}],"type":"strong"}]},{"type":"paragraph","inlineContent":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"Scope"},{"type":"text","text":" is the minimal implementation for managing a piece of state, handling state, mutations, and effects. Scopes can be connected as a dependency tree using the "},{"code":"Superscope","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Subscope"},{"text":" property wrappers.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Testing"}],"type":"strong"}]},{"inlineContent":[{"type":"text","text":"The "},{"code":"TestPlan","type":"codeVoice"},{"text":" helper object enables flow tests of the entire app using production code, allowing for Acceptance-As-Code if state and ","type":"text"},{"code":"When","type":"codeVoice"},{"type":"text","text":" events are clearly named."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Dependency Injection","type":"text"}]}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"Injectable"},{"text":" protocol and ","type":"text"},{"type":"codeVoice","code":"Injected"},{"text":" property wrappers, in combination with scope linking, provide a multi-level dependency injection pattern similar to the one used in SwiftUI.","type":"text"}]}]}],"type":"unorderedList"}],"kind":"content"}],"references":{"doc://Statoscope/documentation/Statoscope/EffectfullImplementation":{"title":"EffectfullImplementation","type":"topic","kind":"symbol","url":"\/documentation\/statoscope\/effectfullimplementation","navigatorTitle":[{"text":"EffectfullImplementation","kind":"identifier"}],"abstract":[],"identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/EffectfullImplementation","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"EffectfullImplementation"}],"role":"symbol"},"doc://Statoscope/documentation/Statoscope/Statostore":{"url":"\/documentation\/statoscope\/statostore","kind":"symbol","title":"Statostore","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Statostore","kind":"identifier"}],"abstract":[{"type":"text","text":"An Statostore is the Naive’s solution to implement State + Store + Reducer combination"}],"identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/Statostore","type":"topic","role":"symbol","navigatorTitle":[{"text":"Statostore","kind":"identifier"}]},"doc://Statoscope/documentation/Statoscope/EffectsState":{"url":"\/documentation\/statoscope\/effectsstate","kind":"symbol","title":"EffectsState","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"EffectsState","kind":"identifier"}],"abstract":[{"text":"Responsible of controlling a group of effects, all they having a common return object type When.","type":"text"},{"type":"text","text":" "},{"text":"This struct is meant for communication between an update of your app’s state and the trigger of","type":"text"},{"text":" ","type":"text"},{"text":"the appropriate effects. Simply defines the current ongoing effects providing an snapshot,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and provides functions to enqueue new effects or cancel existing ones."}],"identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/EffectsState","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"EffectsState"}]},"doc://Statoscope/documentation/Statoscope/ScopeImplementation":{"url":"\/documentation\/statoscope\/scopeimplementation","kind":"symbol","title":"ScopeImplementation","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"ScopeImplementation","kind":"identifier"}],"abstract":[],"identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/ScopeImplementation","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ScopeImplementation"}]},"doc://Statoscope/documentation/Statoscope":{"role":"collection","abstract":[{"type":"text","text":"A lightweight library for managing state in iOS applications, designed with simplicity, testability, and scalability in mind."}],"identifier":"doc:\/\/Statoscope\/documentation\/Statoscope","type":"topic","url":"\/documentation\/statoscope","kind":"symbol","title":"Statoscope"},"doc://Statoscope/documentation/Statoscope/Copy()":{"url":"\/documentation\/statoscope\/copy()","kind":"symbol","title":"Copy()","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Copy"},{"kind":"text","text":"()"}],"abstract":[],"identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/Copy()","type":"topic","role":"symbol"},"doc://Statoscope/documentation/Statoscope/WhenFromSubscope":{"abstract":[],"identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/WhenFromSubscope","type":"topic","title":"WhenFromSubscope","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"WhenFromSubscope","kind":"identifier"}],"url":"\/documentation\/statoscope\/whenfromsubscope","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"WhenFromSubscope"}]},"doc://Statoscope/documentation/Statoscope/IsSubscopeToMirror":{"url":"\/documentation\/statoscope\/issubscopetomirror","kind":"symbol","title":"IsSubscopeToMirror","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"IsSubscopeToMirror","kind":"identifier"}],"abstract":[],"identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/IsSubscopeToMirror","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"IsSubscopeToMirror"}]},"doc://Statoscope/documentation/Statoscope/Injected":{"navigatorTitle":[{"kind":"identifier","text":"Injected"}],"role":"symbol","title":"Injected","type":"topic","abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Injected"}],"identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/Injected","url":"\/documentation\/statoscope\/injected","kind":"symbol"},"doc://Statoscope/documentation/Statoscope/HierarchialScopeMiddleWare":{"url":"\/documentation\/statoscope\/hierarchialscopemiddleware","kind":"symbol","title":"HierarchialScopeMiddleWare","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HierarchialScopeMiddleWare"}],"abstract":[],"identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/HierarchialScopeMiddleWare","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HierarchialScopeMiddleWare"}]},"doc://Statoscope/documentation/Statoscope/LogLevel":{"url":"\/documentation\/statoscope\/loglevel","kind":"symbol","title":"LogLevel","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"LogLevel","kind":"identifier"}],"abstract":[],"identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/LogLevel","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"LogLevel"}]},"doc://Statoscope/documentation/Statoscope/EffectError":{"navigatorTitle":[{"kind":"identifier","text":"EffectError"}],"role":"symbol","title":"EffectError","type":"topic","abstract":[{"type":"text","text":"An error that can be thrown by an effect"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"EffectError","kind":"identifier"}],"identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/EffectError","url":"\/documentation\/statoscope\/effecterror","kind":"symbol"},"doc://Statoscope/documentation/Statoscope/Subscope":{"abstract":[],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Subscope"}],"title":"Subscope","kind":"symbol","url":"\/documentation\/statoscope\/subscope","navigatorTitle":[{"kind":"identifier","text":"Subscope"}],"identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/Subscope","role":"symbol"},"doc://Statoscope/documentation/Statoscope/StoreProtocol":{"url":"\/documentation\/statoscope\/storeprotocol","kind":"symbol","identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/StoreProtocol","role":"symbol","title":"StoreProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"StoreProtocol","kind":"identifier"}],"navigatorTitle":[{"text":"StoreProtocol","kind":"identifier"}],"abstract":[],"type":"topic"},"doc://Statoscope/documentation/Statoscope/Swift":{"kind":"symbol","url":"\/documentation\/statoscope\/swift","abstract":[],"type":"topic","role":"collection","identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/Swift","title":"Swift"},"doc://Statoscope/documentation/Statoscope/InvalidStateError":{"url":"\/documentation\/statoscope\/invalidstateerror","kind":"symbol","title":"InvalidStateError","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"InvalidStateError","kind":"identifier"}],"abstract":[{"text":"Error to be thrown in an update method when the received When event","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"should not be received given the current state"}],"identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/InvalidStateError","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"InvalidStateError"}]},"doc://Statoscope/documentation/Statoscope/InjectedForEffect":{"url":"\/documentation\/statoscope\/injectedforeffect","kind":"symbol","title":"InjectedForEffect","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"InjectedForEffect","kind":"identifier"}],"abstract":[],"identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/InjectedForEffect","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"InjectedForEffect"}]},"doc://Statoscope/documentation/Statoscope/AnyScopeImplementation":{"url":"\/documentation\/statoscope\/anyscopeimplementation","kind":"symbol","title":"AnyScopeImplementation","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AnyScopeImplementation"}],"abstract":[],"identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/AnyScopeImplementation","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnyScopeImplementation"}]},"doc://Statoscope/documentation/Statoscope/NoInjectedValueFound":{"abstract":[{"text":"Error tthrown by the injection property wrappers.","type":"text"}],"type":"topic","title":"NoInjectedValueFound","role":"symbol","identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/NoInjectedValueFound","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"NoInjectedValueFound","kind":"identifier"}],"url":"\/documentation\/statoscope\/noinjectedvaluefound","navigatorTitle":[{"kind":"identifier","text":"NoInjectedValueFound"}],"kind":"symbol"},"doc://Statoscope/documentation/Statoscope/Inject":{"url":"\/documentation\/statoscope\/inject","kind":"symbol","title":"Inject","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Inject","kind":"identifier"}],"abstract":[],"identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/Inject","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Inject"}]},"doc://Statoscope/documentation/Statoscope/AnyEffect":{"role":"symbol","identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/AnyEffect","url":"\/documentation\/statoscope\/anyeffect","type":"topic","abstract":[{"type":"text","text":"Type erased box for an Effect"}],"kind":"symbol","title":"AnyEffect","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyEffect"}],"navigatorTitle":[{"text":"AnyEffect","kind":"identifier"}]},"doc://Statoscope/documentation/Statoscope/StatoscopeErrors":{"identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/StatoscopeErrors","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"StatoscopeErrors","kind":"identifier"}],"role":"symbol","title":"StatoscopeErrors","url":"\/documentation\/statoscope\/statoscopeerrors","navigatorTitle":[{"text":"StatoscopeErrors","kind":"identifier"}],"abstract":[],"type":"topic","kind":"symbol"},"doc://Statoscope/documentation/Statoscope/StoreViewProtocol":{"navigatorTitle":[{"text":"StoreViewProtocol","kind":"identifier"}],"role":"symbol","title":"StoreViewProtocol","abstract":[],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"StoreViewProtocol"}],"identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/StoreViewProtocol","url":"\/documentation\/statoscope\/storeviewprotocol","kind":"symbol"},"doc://Statoscope/documentation/Statoscope/Injectable":{"navigatorTitle":[{"kind":"identifier","text":"Injectable"}],"role":"symbol","title":"Injectable","type":"topic","abstract":[{"type":"text","text":"Implemented by objects thata can be used by the injection property wrappers"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Injectable"}],"identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/Injectable","url":"\/documentation\/statoscope\/injectable","kind":"symbol"},"doc://Statoscope/documentation/Statoscope/InjectedWithDefault":{"url":"\/documentation\/statoscope\/injectedwithdefault","kind":"symbol","title":"InjectedWithDefault","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"InjectedWithDefault"}],"abstract":[],"identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/InjectedWithDefault","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"InjectedWithDefault"}]},"doc://Statoscope/documentation/Statoscope/Effect":{"role":"symbol","identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/Effect","url":"\/documentation\/statoscope\/effect","abstract":[{"type":"text","text":"Defines an asynchronous operation which returns specific type of action"}],"type":"topic","kind":"symbol","title":"Effect","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Effect"}],"navigatorTitle":[{"text":"Effect","kind":"identifier"}]},"doc://Statoscope/documentation/Statoscope/scopeEffectsDisabledInUnitTests":{"url":"\/documentation\/statoscope\/scopeeffectsdisabledinunittests","kind":"symbol","title":"scopeEffectsDisabledInUnitTests","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"scopeEffectsDisabledInUnitTests","kind":"identifier"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[],"identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/scopeEffectsDisabledInUnitTests","type":"topic","role":"symbol"},"doc://Statoscope/documentation/Statoscope/EffectStruct(equatable:)":{"url":"\/documentation\/statoscope\/effectstruct(equatable:)","kind":"symbol","title":"EffectStruct(equatable:)","fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"text":"EffectStruct","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"equatable"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":")","kind":"text"}],"abstract":[],"identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/EffectStruct(equatable:)","type":"topic","role":"symbol"},"doc://Statoscope/documentation/Statoscope/DummyScopeImplementation":{"url":"\/documentation\/statoscope\/dummyscopeimplementation","kind":"symbol","title":"DummyScopeImplementation","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"DummyScopeImplementation","kind":"identifier"}],"abstract":[],"identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/DummyScopeImplementation","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"DummyScopeImplementation"}]},"doc://Statoscope/documentation/Statoscope/Effectfull":{"url":"\/documentation\/statoscope\/effectfull","kind":"symbol","title":"Effectfull","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Effectfull","kind":"identifier"}],"abstract":[{"type":"text","text":"An object that handles or controls a group of effects"}],"identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/Effectfull","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Effectfull"}]},"doc://Statoscope/documentation/Statoscope/CaseAssociatedGet()":{"title":"CaseAssociatedGet()","abstract":[],"url":"\/documentation\/statoscope\/caseassociatedget()","identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/CaseAssociatedGet()","fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"text":"CaseAssociatedGet","kind":"identifier"},{"kind":"text","text":"()"}],"kind":"symbol","type":"topic","role":"symbol"},"doc://Statoscope/documentation/Statoscope/bind(viewShows:_:)":{"url":"\/documentation\/statoscope\/bind(viewshows:_:)","kind":"symbol","title":"bind(viewShows:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"bind","kind":"identifier"},{"kind":"text","text":"<"},{"text":"VS","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"When"},{"text":">(","kind":"text"},{"text":"viewShows","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"VS"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"VS"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"When"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Binding","preciseIdentifier":"s:7SwiftUI7BindingV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"VS"},{"text":">","kind":"text"}],"abstract":[],"identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/bind(viewShows:_:)","type":"topic","role":"symbol"},"doc://Statoscope/tutorials/StatoscopeTutorial":{"identifier":"doc:\/\/Statoscope\/tutorials\/StatoscopeTutorial","role":"overview","kind":"overview","type":"topic","url":"\/tutorials\/statoscopetutorial","abstract":[{"type":"text","text":"Statoscope is a small library to build apps with state management,"},{"type":"text","text":" "},{"type":"text","text":"testing, effects management and dependency injection."}],"title":"Statoscope basics"},"doc://Statoscope/documentation/Statoscope/InjectionTreeNodeProtocol":{"url":"\/documentation\/statoscope\/injectiontreenodeprotocol","kind":"symbol","title":"InjectionTreeNodeProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"InjectionTreeNodeProtocol"}],"abstract":[{"type":"text","text":"Artifact protocol, please refer to "},{"identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/InjectionTreeNode","isActive":true,"type":"reference"},{"type":"text","text":" for features"},{"type":"text","text":" "},{"text":"This protocol simply enables both InjectionTreeNode and InjectionTreeNode?","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"struct to conform to the same protocol and be used in the Subscope property wrapper"}],"identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/InjectionTreeNodeProtocol","type":"topic","role":"symbol","navigatorTitle":[{"text":"InjectionTreeNodeProtocol","kind":"identifier"}]},"doc://Statoscope/documentation/Statoscope/bind(viewShows:_:_:)":{"url":"\/documentation\/statoscope\/bind(viewshows:_:_:)","kind":"symbol","title":"bind(viewShows:_:_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"bind"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"VS"},{"kind":"text","text":", "},{"text":"T","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"When","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"viewShows"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"VS"},{"text":", ","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"text":"VS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":">, (","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"text":"When","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Binding","preciseIdentifier":"s:7SwiftUI7BindingV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"abstract":[],"identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/bind(viewShows:_:_:)","type":"topic","role":"symbol"},"doc://Statoscope/documentation/Statoscope/InjectionTreeNode":{"url":"\/documentation\/statoscope\/injectiontreenode","title":"InjectionTreeNode","identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/InjectionTreeNode","kind":"symbol","type":"topic","abstract":[{"text":"Represents a node in a tree of dependencies search to achieve a dependency","type":"text"},{"type":"text","text":" "},{"text":"injection similar to what environmentObject achieves in swiftUI","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"InjectionTreeNode"}],"navigatorTitle":[{"kind":"identifier","text":"InjectionTreeNode"}]},"doc://Statoscope/documentation/Statoscope/__(_:_:)":{"url":"\/documentation\/statoscope\/__(_:_:)","kind":"symbol","title":"??(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"??"},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Binding","preciseIdentifier":"s:7SwiftUI7BindingV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":"?>, ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Binding","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI7BindingV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"abstract":[],"identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/__(_:_:)","type":"topic","role":"symbol"},"doc://Statoscope/documentation/Statoscope/Scope":{"url":"\/documentation\/statoscope\/scope","kind":"symbol","title":"Scope","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Scope","kind":"identifier"}],"abstract":[{"type":"text","text":"An Scope is the specification of a piece of the app’s state and business model"}],"identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/Scope","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Scope"}]},"doc://Statoscope/documentation/Statoscope/InvalidPristineResult":{"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"InvalidPristineResult","kind":"identifier"}],"role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"InvalidPristineResult"}],"title":"InvalidPristineResult","url":"\/documentation\/statoscope\/invalidpristineresult","identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/InvalidPristineResult","abstract":[]},"doc://Statoscope/documentation/Statoscope/InjectedParam":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InjectedParam","kind":"identifier"}],"role":"symbol","abstract":[],"identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/InjectedParam","type":"topic","url":"\/documentation\/statoscope\/injectedparam","kind":"symbol","navigatorTitle":[{"text":"InjectedParam","kind":"identifier"}],"title":"InjectedParam"},"doc://Statoscope/documentation/Statoscope/StatoscopeLogger":{"url":"\/documentation\/statoscope\/statoscopelogger","kind":"symbol","title":"StatoscopeLogger","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"StatoscopeLogger","kind":"identifier"}],"abstract":[],"identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/StatoscopeLogger","type":"topic","role":"symbol","navigatorTitle":[{"text":"StatoscopeLogger","kind":"identifier"}]},"doc://Statoscope/documentation/Statoscope/Overview-article":{"url":"\/documentation\/statoscope\/overview-article","kind":"article","title":"Overview","abstract":[{"type":"text","text":"Explore the core concepts of the Statoscope architecture through examples."}],"identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/Overview-article","type":"topic","role":"article"},"doc://Statoscope/documentation/Statoscope/Superscope":{"url":"\/documentation\/statoscope\/superscope","kind":"symbol","title":"Superscope","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Superscope"}],"abstract":[],"identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/Superscope","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Superscope"}]}}}