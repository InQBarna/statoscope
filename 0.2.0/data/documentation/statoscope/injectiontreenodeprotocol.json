{"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"InjectionTreeNodeProtocol","kind":"identifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"abstract":[{"type":"text","text":"Artifact protocol, please refer to "},{"identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/InjectionTreeNode","type":"reference","isActive":true},{"text":" for features","type":"text"},{"text":" ","type":"text"},{"text":"This protocol simply enables both InjectionTreeNode and InjectionTreeNode?","type":"text"},{"type":"text","text":" "},{"type":"text","text":"struct to conform to the same protocol and be used in the Subscope property wrapper"}],"metadata":{"navigatorTitle":[{"kind":"identifier","text":"InjectionTreeNodeProtocol"}],"externalID":"s:10Statoscope25InjectionTreeNodeProtocolP","modules":[{"name":"Statoscope"}],"roleHeading":"Protocol","role":"symbol","title":"InjectionTreeNodeProtocol","symbolKind":"protocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"InjectionTreeNodeProtocol"}]},"sections":[],"relationshipsSections":[{"identifiers":["doc:\/\/Statoscope\/documentation\/Statoscope\/InjectionTreeNode","doc:\/\/Statoscope\/documentation\/Statoscope\/Scope","doc:\/\/Statoscope\/documentation\/Statoscope\/Statostore"],"type":"inheritedBy","title":"Inherited By","kind":"relationships"},{"identifiers":["doc:\/\/Statoscope\/documentation\/Statoscope\/Swift\/Optional"],"kind":"relationships","title":"Conforming Types","type":"conformingTypes"}],"variants":[{"paths":["\/documentation\/statoscope\/injectiontreenodeprotocol"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/Statoscope\/documentation\/Statoscope"]]},"identifier":{"url":"doc:\/\/Statoscope\/documentation\/Statoscope\/InjectionTreeNodeProtocol","interfaceLanguage":"swift"},"kind":"symbol","references":{"doc://Statoscope/documentation/Statoscope/Scope":{"url":"\/documentation\/statoscope\/scope","kind":"symbol","title":"Scope","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Scope","kind":"identifier"}],"abstract":[{"type":"text","text":"An Scope is the specification of a piece of the app’s state and business model"}],"identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/Scope","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Scope"}]},"doc://Statoscope/documentation/Statoscope/Swift/Optional":{"type":"unresolvable","identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/Swift\/Optional","title":"Optional"},"doc://Statoscope/documentation/Statoscope":{"role":"collection","abstract":[{"type":"text","text":"A lightweight library for managing state in iOS applications, designed with simplicity, testability, and scalability in mind."}],"identifier":"doc:\/\/Statoscope\/documentation\/Statoscope","type":"topic","url":"\/documentation\/statoscope","kind":"symbol","title":"Statoscope"},"doc://Statoscope/documentation/Statoscope/InjectionTreeNode":{"url":"\/documentation\/statoscope\/injectiontreenode","title":"InjectionTreeNode","identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/InjectionTreeNode","kind":"symbol","type":"topic","abstract":[{"text":"Represents a node in a tree of dependencies search to achieve a dependency","type":"text"},{"type":"text","text":" "},{"text":"injection similar to what environmentObject achieves in swiftUI","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"InjectionTreeNode"}],"navigatorTitle":[{"kind":"identifier","text":"InjectionTreeNode"}]},"doc://Statoscope/documentation/Statoscope/InjectionTreeNodeProtocol":{"url":"\/documentation\/statoscope\/injectiontreenodeprotocol","kind":"symbol","title":"InjectionTreeNodeProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"InjectionTreeNodeProtocol"}],"abstract":[{"type":"text","text":"Artifact protocol, please refer to "},{"identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/InjectionTreeNode","isActive":true,"type":"reference"},{"type":"text","text":" for features"},{"type":"text","text":" "},{"text":"This protocol simply enables both InjectionTreeNode and InjectionTreeNode?","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"struct to conform to the same protocol and be used in the Subscope property wrapper"}],"identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/InjectionTreeNodeProtocol","type":"topic","role":"symbol","navigatorTitle":[{"text":"InjectionTreeNodeProtocol","kind":"identifier"}]},"doc://Statoscope/documentation/Statoscope/Statostore":{"url":"\/documentation\/statoscope\/statostore","kind":"symbol","title":"Statostore","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Statostore","kind":"identifier"}],"abstract":[{"type":"text","text":"An Statostore is the Naive’s solution to implement State + Store + Reducer combination"}],"identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/Statostore","type":"topic","role":"symbol","navigatorTitle":[{"text":"Statostore","kind":"identifier"}]}}}