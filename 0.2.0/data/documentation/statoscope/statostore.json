{"identifier":{"url":"doc:\/\/Statoscope\/documentation\/Statoscope\/Statostore","interfaceLanguage":"swift"},"metadata":{"role":"symbol","symbolKind":"protocol","externalID":"s:10Statoscope10StatostoreP","navigatorTitle":[{"kind":"identifier","text":"Statostore"}],"modules":[{"name":"Statoscope"}],"title":"Statostore","roleHeading":"Protocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Statostore","kind":"identifier"}]},"schemaVersion":{"major":0,"minor":3,"patch":0},"relationshipsSections":[{"type":"inheritsFrom","identifiers":["doc:\/\/Statoscope\/documentation\/Statoscope\/Effectfull","doc:\/\/Statoscope\/documentation\/Statoscope\/EffectfullImplementation","doc:\/\/Statoscope\/documentation\/Statoscope\/InjectionTreeNode","doc:\/\/Statoscope\/documentation\/Statoscope\/InjectionTreeNodeProtocol","doc:\/\/Statoscope\/documentation\/Statoscope\/Scope","doc:\/\/Statoscope\/documentation\/Statoscope\/ScopeImplementation","doc:\/\/Statoscope\/documentation\/Statoscope\/StoreProtocol","doc:\/\/Statoscope\/s28CustomDebugStringConvertibleP"],"kind":"relationships","title":"Inherits From"}],"abstract":[{"type":"text","text":"An Statostore is the Naive’s solution to implement State + Store + Reducer combination"}],"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Statostore"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/Scope","text":"Scope","preciseIdentifier":"s:10Statoscope5ScopeP","kind":"typeIdentifier"},{"kind":"text","text":", "},{"identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/ScopeImplementation","kind":"typeIdentifier","text":"ScopeImplementation","preciseIdentifier":"s:10Statoscope19ScopeImplementationP"},{"kind":"text","text":", "},{"preciseIdentifier":"s:10Statoscope13StoreProtocolP","kind":"typeIdentifier","identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/StoreProtocol","text":"StoreProtocol"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/StoreProtocol\/ScopeImpl","kind":"typeIdentifier","text":"ScopeImpl","preciseIdentifier":"s:10Statoscope13StoreProtocolP9ScopeImplQa"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"text":"Overview","type":"heading","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"The same class-type object, may provide all features in","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"State: Using member variables"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"When: forcing definition","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"StoreImplementation: forcing implementation of the update method"}]}]},{"content":[{"inlineContent":[{"text":"InjectionTreeNode: Enabling communication with other statoscopes","type":"text"}],"type":"paragraph"}]}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/statoscope\/statostore"]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Statoscope\/documentation\/Statoscope"]]},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/Statoscope\/documentation\/Statoscope\/Statostore\/set(_:_:)"]}],"references":{"doc://Statoscope/documentation/Statoscope/StoreProtocol":{"url":"\/documentation\/statoscope\/storeprotocol","kind":"symbol","identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/StoreProtocol","role":"symbol","title":"StoreProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"StoreProtocol","kind":"identifier"}],"navigatorTitle":[{"text":"StoreProtocol","kind":"identifier"}],"abstract":[],"type":"topic"},"doc://Statoscope/documentation/Statoscope/ScopeImplementation":{"url":"\/documentation\/statoscope\/scopeimplementation","kind":"symbol","title":"ScopeImplementation","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"ScopeImplementation","kind":"identifier"}],"abstract":[],"identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/ScopeImplementation","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ScopeImplementation"}]},"doc://Statoscope/documentation/Statoscope/Scope":{"url":"\/documentation\/statoscope\/scope","kind":"symbol","title":"Scope","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Scope","kind":"identifier"}],"abstract":[{"type":"text","text":"An Scope is the specification of a piece of the app’s state and business model"}],"identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/Scope","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Scope"}]},"doc://Statoscope/documentation/Statoscope/InjectionTreeNode":{"url":"\/documentation\/statoscope\/injectiontreenode","title":"InjectionTreeNode","identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/InjectionTreeNode","kind":"symbol","type":"topic","abstract":[{"text":"Represents a node in a tree of dependencies search to achieve a dependency","type":"text"},{"type":"text","text":" "},{"text":"injection similar to what environmentObject achieves in swiftUI","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"InjectionTreeNode"}],"navigatorTitle":[{"kind":"identifier","text":"InjectionTreeNode"}]},"doc://Statoscope/documentation/Statoscope/Statostore/set(_:_:)":{"role":"symbol","title":"set(_:_:)","type":"topic","identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/Statostore\/set(_:_:)","abstract":[],"url":"\/documentation\/statoscope\/statostore\/set(_:_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"set"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"ReferenceWritableKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s24ReferenceWritableKeyPathC"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}]},"doc://Statoscope/documentation/Statoscope/Statostore":{"url":"\/documentation\/statoscope\/statostore","kind":"symbol","title":"Statostore","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Statostore","kind":"identifier"}],"abstract":[{"type":"text","text":"An Statostore is the Naive’s solution to implement State + Store + Reducer combination"}],"identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/Statostore","type":"topic","role":"symbol","navigatorTitle":[{"text":"Statostore","kind":"identifier"}]},"doc://Statoscope/documentation/Statoscope/InjectionTreeNodeProtocol":{"url":"\/documentation\/statoscope\/injectiontreenodeprotocol","kind":"symbol","title":"InjectionTreeNodeProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"InjectionTreeNodeProtocol"}],"abstract":[{"type":"text","text":"Artifact protocol, please refer to "},{"identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/InjectionTreeNode","isActive":true,"type":"reference"},{"type":"text","text":" for features"},{"type":"text","text":" "},{"text":"This protocol simply enables both InjectionTreeNode and InjectionTreeNode?","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"struct to conform to the same protocol and be used in the Subscope property wrapper"}],"identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/InjectionTreeNodeProtocol","type":"topic","role":"symbol","navigatorTitle":[{"text":"InjectionTreeNodeProtocol","kind":"identifier"}]},"doc://Statoscope/s28CustomDebugStringConvertibleP":{"title":"Swift.CustomDebugStringConvertible","identifier":"doc:\/\/Statoscope\/s28CustomDebugStringConvertibleP","type":"unresolvable"},"doc://Statoscope/documentation/Statoscope/EffectfullImplementation":{"title":"EffectfullImplementation","type":"topic","kind":"symbol","url":"\/documentation\/statoscope\/effectfullimplementation","navigatorTitle":[{"text":"EffectfullImplementation","kind":"identifier"}],"abstract":[],"identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/EffectfullImplementation","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"EffectfullImplementation"}],"role":"symbol"},"doc://Statoscope/documentation/Statoscope/Effectfull":{"url":"\/documentation\/statoscope\/effectfull","kind":"symbol","title":"Effectfull","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Effectfull","kind":"identifier"}],"abstract":[{"type":"text","text":"An object that handles or controls a group of effects"}],"identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/Effectfull","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Effectfull"}]},"doc://Statoscope/documentation/Statoscope":{"role":"collection","abstract":[{"type":"text","text":"A lightweight library for managing state in iOS applications, designed with simplicity, testability, and scalability in mind."}],"identifier":"doc:\/\/Statoscope\/documentation\/Statoscope","type":"topic","url":"\/documentation\/statoscope","kind":"symbol","title":"Statoscope"},"doc://Statoscope/documentation/Statoscope/StoreProtocol/ScopeImpl":{"url":"\/documentation\/statoscope\/storeprotocol\/scopeimpl","kind":"symbol","identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/StoreProtocol\/ScopeImpl","required":true,"role":"symbol","title":"ScopeImpl","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ScopeImpl","kind":"identifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Statoscope19ScopeImplementationP","text":"ScopeImplementation"}],"abstract":[],"type":"topic"}}}