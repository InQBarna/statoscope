{"sections":[],"metadata":{"roleHeading":"Instance Method","role":"symbol","modules":[{"name":"Statoscope"}],"externalID":"s:10Statoscope12EffectsStateV12cancelEffect5whereySbAA0E0_pXE_tF","title":"cancelEffect(where:)","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"cancelEffect","kind":"identifier"},{"text":"(","kind":"text"},{"text":"where","kind":"externalParam"},{"text":": (any ","kind":"text"},{"preciseIdentifier":"s:10Statoscope6EffectP","kind":"typeIdentifier","text":"Effect"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"mutating","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cancelEffect"},{"text":"(","kind":"text"},{"text":"where","kind":"externalParam"},{"kind":"text","text":" "},{"text":"whereBlock","kind":"internalParam"},{"kind":"text","text":": (any "},{"text":"Effect","kind":"typeIdentifier","identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/Effect","preciseIdentifier":"s:10Statoscope6EffectP"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":")","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]},{"parameters":[{"name":"whereBlock","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that takes an ongoing effect as its argument and returns a"},{"type":"text","text":" "},{"type":"text","text":"Boolean value indicating whether the effect should be cancelle"}]}]}],"kind":"parameters"},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"You should have previously enqueued a typed effect like this one","type":"text"}]},{"type":"codeListing","code":["struct NetworkEffect<Response: Decodable>: Effect {","  let request: URLRequest","  func runEffect() async throws -> Response {","    try JSONDecoder().decode(Response.self, from: try await URLSession.shared.data(for: request).0)","  }","}"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"and layer you can cancel it by:"}],"type":"paragraph"},{"code":["effectsController.cancelEffect { ongoingEffect in","  networkEffect is NetworkEffect<DTO>",")"],"syntax":"swift","type":"codeListing"}],"kind":"content"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Statoscope\/documentation\/Statoscope","doc:\/\/Statoscope\/documentation\/Statoscope\/EffectsState"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Statoscope\/documentation\/Statoscope\/EffectsState\/cancelEffect(where:)"},"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"text":"Cancels the effects that conform to the provided block.","type":"text"}],"variants":[{"paths":["\/documentation\/statoscope\/effectsstate\/canceleffect(where:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Statoscope/documentation/Statoscope/EffectsState/cancelEffect(where:)":{"url":"\/documentation\/statoscope\/effectsstate\/canceleffect(where:)","abstract":[{"type":"text","text":"Cancels the effects that conform to the provided block."}],"type":"topic","identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/EffectsState\/cancelEffect(where:)","kind":"symbol","role":"symbol","title":"cancelEffect(where:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cancelEffect"},{"kind":"text","text":"("},{"text":"where","kind":"externalParam"},{"text":": (any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Statoscope6EffectP","text":"Effect"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}]},"doc://Statoscope/documentation/Statoscope":{"role":"collection","abstract":[{"type":"text","text":"A lightweight library for managing state in iOS applications, designed with simplicity, testability, and scalability in mind."}],"identifier":"doc:\/\/Statoscope\/documentation\/Statoscope","type":"topic","url":"\/documentation\/statoscope","kind":"symbol","title":"Statoscope"},"doc://Statoscope/documentation/Statoscope/EffectsState":{"url":"\/documentation\/statoscope\/effectsstate","kind":"symbol","title":"EffectsState","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"EffectsState","kind":"identifier"}],"abstract":[{"text":"Responsible of controlling a group of effects, all they having a common return object type When.","type":"text"},{"type":"text","text":" "},{"text":"This struct is meant for communication between an update of your appâ€™s state and the trigger of","type":"text"},{"text":" ","type":"text"},{"text":"the appropriate effects. Simply defines the current ongoing effects providing an snapshot,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and provides functions to enqueue new effects or cancel existing ones."}],"identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/EffectsState","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"EffectsState"}]},"doc://Statoscope/documentation/Statoscope/Effect":{"role":"symbol","identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/Effect","url":"\/documentation\/statoscope\/effect","abstract":[{"type":"text","text":"Defines an asynchronous operation which returns specific type of action"}],"type":"topic","kind":"symbol","title":"Effect","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Effect"}],"navigatorTitle":[{"text":"Effect","kind":"identifier"}]}}}