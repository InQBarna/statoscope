{"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/statoscope\/effectsstate\/enqueue(_:)"]}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"enqueue"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"E"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"effect"},{"text":": ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"When"},{"text":" == ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:10Statoscope6EffectP10ResultTypeQa","identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/Effect\/ResultType","text":"ResultType","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/Effect","kind":"typeIdentifier","preciseIdentifier":"s:10Statoscope6EffectP","text":"Effect"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"a container of an async operation to be executed.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"It must complete with an appropriate When case"}],"type":"paragraph"}],"name":"effect"}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Please note enqueueing an effect is just adding it to a list of pending effects. Does not","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"immediately trigger it. However EffectsState is provided in the update method and right"},{"type":"text","text":" "},{"text":"after method is completed, the enqueued effects will be triggered","type":"text"}]},{"type":"heading","level":3,"text":"Usage","anchor":"Usage"},{"inlineContent":[{"type":"text","text":"Use it with an anonymous Effect"}],"type":"paragraph"},{"syntax":"swift","code":["effectsController.enqueue(","  AnyEffect {","    let resultDTO = try JSONDecoder().decode(DTO.self, from: try await URLSession.shared.data(for: request).0)","    return When.networkPostCompleted(resultDTO)","  }",")"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"Or created a typed Effect","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["struct NetworkEffect<Response: Decodable>: Effect {","  let request: URLRequest","  func runEffect() async throws -> Response {","    try JSONDecoder().decode(Response.self, from: try await URLSession.shared.data(for: request).0)","  }","}"]},{"inlineContent":[{"text":"And use it mapping the result to your When case","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["effectsController.enqueue(","  let url = URL(string: \"http:\/\/statoscope.com\")!","  var request = URLRequest(url: url)","  request.setValue(\"application\/json\", forHTTPHeaderField: \"Content-Type\")","  request.httpMethod = \"POST\"","  request.httpBody = try JSONEncoder().encode(dto)","  return NetworkEffect(request)","     .map(When.networkPostCompleted)",")"]}]}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"enqueue"},{"text":"<","kind":"text"},{"text":"E","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"E"},{"text":")","kind":"text"}],"role":"symbol","modules":[{"name":"Statoscope"}],"title":"enqueue(_:)","externalID":"s:10Statoscope12EffectsStateV7enqueueyyqd__10ResultTypeQyd__RszAA6EffectRd__lF","roleHeading":"Instance Method","symbolKind":"method"},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Statoscope\/documentation\/Statoscope\/EffectsState\/enqueue(_:)"},"abstract":[{"type":"text","text":"Enqueues an effect to be triggered. The provided effect must return a new When case"}],"hierarchy":{"paths":[["doc:\/\/Statoscope\/documentation\/Statoscope","doc:\/\/Statoscope\/documentation\/Statoscope\/EffectsState"]]},"references":{"doc://Statoscope/documentation/Statoscope/EffectsState/enqueue(_:)":{"abstract":[{"text":"Enqueues an effect to be triggered. The provided effect must return a new When case","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"enqueue","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"E"},{"text":">(","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"kind":"text","text":")"}],"type":"topic","url":"\/documentation\/statoscope\/effectsstate\/enqueue(_:)","role":"symbol","identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/EffectsState\/enqueue(_:)","kind":"symbol","title":"enqueue(_:)"},"doc://Statoscope/documentation/Statoscope/Effect":{"role":"symbol","identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/Effect","url":"\/documentation\/statoscope\/effect","abstract":[{"type":"text","text":"Defines an asynchronous operation which returns specific type of action"}],"type":"topic","kind":"symbol","title":"Effect","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Effect"}],"navigatorTitle":[{"text":"Effect","kind":"identifier"}]},"doc://Statoscope/documentation/Statoscope":{"role":"collection","abstract":[{"type":"text","text":"A lightweight library for managing state in iOS applications, designed with simplicity, testability, and scalability in mind."}],"identifier":"doc:\/\/Statoscope\/documentation\/Statoscope","type":"topic","url":"\/documentation\/statoscope","kind":"symbol","title":"Statoscope"},"doc://Statoscope/documentation/Statoscope/Effect/ResultType":{"role":"symbol","identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/Effect\/ResultType","url":"\/documentation\/statoscope\/effect\/resulttype","type":"topic","abstract":[{"type":"text","text":"The type returned by this effect,"}],"required":true,"kind":"symbol","title":"ResultType","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResultType"},{"text":" : ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"}]},"doc://Statoscope/documentation/Statoscope/EffectsState":{"url":"\/documentation\/statoscope\/effectsstate","kind":"symbol","title":"EffectsState","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"EffectsState","kind":"identifier"}],"abstract":[{"text":"Responsible of controlling a group of effects, all they having a common return object type When.","type":"text"},{"type":"text","text":" "},{"text":"This struct is meant for communication between an update of your appâ€™s state and the trigger of","type":"text"},{"text":" ","type":"text"},{"text":"the appropriate effects. Simply defines the current ongoing effects providing an snapshot,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and provides functions to enqueue new effects or cancel existing ones."}],"identifier":"doc:\/\/Statoscope\/documentation\/Statoscope\/EffectsState","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"EffectsState"}]}}}